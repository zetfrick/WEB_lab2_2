// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import (
	"github.com/swaggo/swag"
)

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/news": {
            "get": {
                "summary": "Get all news",
                "responses": {
                    "200": {
                        "description": "A list of news",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/News"
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Create a new news item",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "News object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/News"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "News created",
                        "schema": {
                            "$ref": "#/definitions/News"
                        }
                    }
                }
            }
        },
        "/news/{id}": {
            "put": {
                "summary": "Update an existing news item",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "ID of the news item to update",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "News object that needs to be updated",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/News"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "News updated",
                        "schema": {
                            "$ref": "#/definitions/News"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete a news item",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "ID of the news item to delete",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "News deleted",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "News": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "author": {
                    "type": "string"
                },
                "content": {
                    "type": "string"
                }
            }
        }
    }
}`

var SwaggerInfo = &swag.Spec{
	Version:          "1.0.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{"http"},
	Title:            "News Service",
	Description:      "API for managing news",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
